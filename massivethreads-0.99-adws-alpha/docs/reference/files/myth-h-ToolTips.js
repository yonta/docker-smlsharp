NDContentPage.OnToolTipsLoaded({10:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype10\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_init(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">void</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Initialize MassiveThreads library with default parameters (see myth_init_ex).&nbsp; You normally do not have to call it by youself, as it is automatically called when you first call any MassiveThreads function.&nbsp; Internally, it invokes underlying workers.&nbsp; You may want to call it to make absolutely sure that an initilization has taken place before a certain point.</div></div>",11:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype11\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_init_ex(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Initialize MassiveThreads library with the specified global attributes.&nbsp; You normally do not have to call it by youself, as myth_init is automatically called when you first call any MassiveThreads function.&nbsp; You may want to call it to explicitly set various attributes.</div></div>",13:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype13\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_init(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",14:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype14\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_destroy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",15:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype15\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_get_stacksize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\">size_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">stacksize</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",16:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype16\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_set_stacksize(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\">size_t&nbsp;</td><td></td><td class=\"PName last\">stacksize</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",17:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype17\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_get_n_workers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\">size_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">n_workers</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",18:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype18\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_set_n_workers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\">size_t&nbsp;</td><td></td><td class=\"PName last\">n_workers</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",19:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype19\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_get_bind_workers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">bind_workers</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",20:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype20\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_globalattr_set_bind_workers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_globalattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td></td><td class=\"PName last\">bind_workers</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",21:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype21\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">myth_thread_t myth_create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_func_t&nbsp;</td><td></td><td class=\"PName last\">func,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">arg</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a new user-level thread executing func(arg) with default options.&nbsp; Note that it is equivalent to myth_create_ex(func,arg,0);</div></div>",22:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype22\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_create_ex(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_thread_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">id,</td></tr><tr><td class=\"PType first\">myth_thread_attr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr,</td></tr><tr><td class=\"PType first\">myth_func_t&nbsp;</td><td></td><td class=\"PName last\">func,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">arg</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a new user-level thread executing func(arg) with specified options.</div></div>",23:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype23\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> myth_exit(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">ret</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Terminate the calling user-level thread.</div></div>",24:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype24\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_join(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_thread_t&nbsp;</td><td></td><td class=\"PName last\">th,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">**</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Wait for the specified thread th to finish.</div></div>",28:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype28\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> myth_cleanup_thread(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_thread_t&nbsp;</td><td class=\"PName last\">th</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",45:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype45\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> myth_yield(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">void</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">it is equivalent to myth_yield_ex(myth_yield_option_half_half); with probability 1/2, try to yield to a thread in the local queue and if none is found try to steal a thread from a remote queue. do the opposite with probability 1/2.</div></div>",54:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype54\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_mutex_init(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">myth_mutex_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">mutex,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">myth_mutexattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Initialize a mutex.</div></div>",55:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype55\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_mutex_destroy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_mutex_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">mutex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Destroy a mutex.</div></div>",56:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype56\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_mutex_trylock(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_mutex_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">mtx</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Try to lock a mutex.</div></div>",57:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype57\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_mutex_lock(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_mutex_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">mtx</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Lock a mutex.</div></div>",59:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype59\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_mutex_unlock(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_mutex_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">mtx</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Unlock a mutex.</div></div>",80:"<div class=\"NDToolTip TType LC\"><div class=\"TTSummary\">Conditional variable data structure</div></div>",81:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype81\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_cond_init(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">myth_cond_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">cond,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\">myth_condattr_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">attr</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Initialize a condition variable.</div></div>",82:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype82\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_cond_destroy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_cond_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">cond</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Destroy a condition variable.</div></div>",83:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype83\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_cond_signal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_cond_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">c</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Wake up at least one thread blocking on a condition variable.</div></div>",84:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype84\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_cond_broadcast(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_cond_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">cond</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Wake up all threads blocking on a condition variable.</div></div>",85:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype85\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_cond_wait(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_cond_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">cond,</td></tr><tr><td class=\"PType first\">myth_mutex_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">mutex</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Atomically unlock a mutex and block on a condition variable.</div></div>",112:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype112\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_get_worker_num(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">void</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">The index of the calling thread, an integer x satisfying 0 &lt;= x &lt; myth_get_num_workers().</div></div>",113:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype113\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_get_num_workers(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">void</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">The number of underlying workers.</div></div>",137:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype137\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_key_create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">myth_key_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">key,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PType\">(*destr_function)&nbsp;</td><td class=\"PNamePrefix\">(</td><td class=\"PName last\">void *)</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a key for user-level thread-specific data.</div></div>",139:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype139\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_key_delete(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_key_t&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Delete a key for user-level thread-specific data.</div></div>",140:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype140\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_setspecific(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">myth_key_t&nbsp;</td><td></td><td class=\"PName last\">key,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Associate a thread-specific data with a key.</div></div>",144:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype144\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">int</span> myth_adws_get_stealable()</div><div class=\"TTSummary\">1 if steal is enabled in ADWS, otherwise 0.</div></div>",146:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype146\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">myth_thread_t myth_adws_create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_func_t&nbsp;</td><td></td><td class=\"PName last\">func,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">arg,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">double</span>&nbsp;</td><td></td><td class=\"PName last\">work</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a new user-level thread executing func(arg) with default options.&nbsp; The newly created thread is scheduled by Almost Deterministic Work Stealing (ADWS). The created thread cannot be the first thread in task groups.</div></div>",150:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype150\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> myth_adws_set_stealable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">int</span>&nbsp;</td><td class=\"PName last\">flag</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div>",153:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype153\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\">myth_thread_t myth_adws_create_first(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_func_t&nbsp;</td><td></td><td class=\"PName last\">func,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">arg,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">double</span>&nbsp;</td><td></td><td class=\"PName last\">work,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">double</span>&nbsp;</td><td></td><td class=\"PName last\">w_total,</td></tr><tr><td class=\"PType first\">myth_workers_range_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">workers_range</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a new user-level thread executing func(arg) with default options.&nbsp; The newly created thread is scheduled by Almost Deterministic Work Stealing (ADWS). This function must be called at the begenning of task groups only once. Following task creations in the same task group must be done by myth_adws_create.</div></div>",155:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype155\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_adws_join(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_thread_t&nbsp;</td><td></td><td class=\"PName last\">th,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">**</td><td class=\"PName last\">result</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Wait for the specified thread th to finish.&nbsp; Threads created by using myth_adws_create or myth_adws_create_first must be joined by myth_adws_join or myth_adws_join_last instead of myth_join.</div></div>",156:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype156\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_adws_join_last(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_thread_t&nbsp;</td><td></td><td class=\"PName last\">th,</td></tr><tr><td class=\"PType first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">**</td><td class=\"PName last\">result,</td></tr><tr><td class=\"PType first\">myth_workers_range_t&nbsp;</td><td></td><td class=\"PName last\">workers_range</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Wait for the specified thread th to finish.&nbsp; The last join of task groups must be myth_adws_join_last. In ADWS, threads can be joined by myth_adws_join in an arbitrary order, but the last join call must be myth_adws_join_last.</div></div>",209:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype209\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> *myth_getspecific(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_key_t&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Obtain a user-level thread-specific data associated with a key.</div></div>",211:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype211\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_wls_key_create(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">myth_wls_key_t&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">key,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PType\">(*destr_function)&nbsp;</td><td class=\"PNamePrefix\">(</td><td class=\"PName last\">void *)</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Create a key for worker-specific data.</div></div>",212:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype212\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_wls_key_delete(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_wls_key_t&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Delete a key for worker-specific data.</div></div>",213:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype213\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> myth_wls_setspecific(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\">myth_wls_key_t&nbsp;</td><td></td><td class=\"PName last\">key,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">const</span>&nbsp;</td><td class=\"PType\"><span class=\"SHKeyword\">void</span>&nbsp;</td><td class=\"PNamePrefix\">*</td><td class=\"PName last\">data</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Associate a worker-specific data with a key.</div></div>",214:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype214\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> *myth_wls_getspecific(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">myth_wls_key_t&nbsp;</td><td class=\"PName last\">key</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div><div class=\"TTSummary\">Obtain a worker-specific data associated with a key.</div></div>"});